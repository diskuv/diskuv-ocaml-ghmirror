name: Vagrant Testing for Windows

on:
  # Because GitLab CI is the authoritative CI for diskuv-ocaml, and assets need to be generated (especially the Diskuv OCaml distribution .zip archives),
  # we test on a schedule (daily) and we also test on manual workflow (which _could_ be triggered by GitLab CI; see
  # https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event).
  schedule:
    - cron: '25 8 * * *' # 08:25 UTC each day
  workflow_dispatch:

jobs:
  vagrant-up:
    # macOS is only GitHub CI runner that supports VirtualBox; https://stackoverflow.com/questions/66261101/using-vagrant-on-github-actions-ideally-incl-virtualbox
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2

    - name: Cache Vagrant boxes
      uses: actions/cache@v2
      with:
        path: ~/.vagrant.d/boxes
        key: ${{ runner.os }}-vagrant-${{ hashFiles('vagrant/win32/Vagrantfile') }}
        restore-keys: |
          ${{ runner.os }}-vagrant-

    - name: '"vagrant up" for release "${{ github.ref_name }}"'
      if: ${{ github.ref_type == 'tag' }}
      run: cd vagrant/win32 && vagrant up

    - name: '"vagrant up" for **previous** release'
      if: ${{ github.ref_type != 'tag' }}
      run: 'DKMLDIR=$PWD; cat $DKMLDIR/.dkmlroot && cd vagrant/win32 && if ! vagrant up; then printf "FATAL: Vagrant failed to start up for\n"; sed "s/^/  /" $DKMLDIR/.dkmlroot; fi'

    - name: Check test_installation.t status
      run: |
        set -x ; EXITC=$(awk 'NF>0{print $1}' vagrant/win32/test_installation.t/exitcode.en-US.txt) ; if [ ! "$EXITC" = 0 ]; then echo "FATAL: Vagrant test_installation.t FAILED with exit code $EXITC"; exit 1; fi
